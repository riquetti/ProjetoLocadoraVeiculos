/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ProjetoLocadoraVeiculos.gui.cadastro;

import ProjetoLocadoraVeiculos.dao.ClienteDAO;
import ProjetoLocadoraVeiculos.dao.EstadoDAO;
import ProjetoLocadoraVeiculos.dao.MunicipioDAO;
import ProjetoLocadoraVeiculos.entity.Cliente;
import ProjetoLocadoraVeiculos.entity.Estado;
import ProjetoLocadoraVeiculos.entity.Municipio;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Riquetti
 */
public class CadastroClienteEditarGUI extends javax.swing.JDialog {

    private ClienteDAO dao = new ClienteDAO();
    private Cliente clienteEditar = null;
    private CadastroClienteGUI parentDialog;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form CadastroFabricanteEditarGUI
     */
    public CadastroClienteEditarGUI(java.awt.Frame parent, boolean modal, CadastroClienteGUI dialogParent) {
        super(parent, modal);
        parentDialog = dialogParent;

        initComponents();

        try {
            inicializarMascaras();
        } catch (Exception ex) {
            Logger.getLogger(CadastroClienteEditarGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        carregarComboEstado();
        carregarComboMunicipio();
    }

    public void carregarCliente(int id) {

        clienteEditar = dao.select(id);

        txtNome.setText(String.valueOf(clienteEditar.getNome_cliente()));
        txtRg.setText(String.valueOf(clienteEditar.getRg()));
        txtCpf.setText(String.valueOf(clienteEditar.getCpf()));
        txtLogradouro.setText(String.valueOf(clienteEditar.getLogradouro()));
        txtCNH.setText(String.valueOf(clienteEditar.getCnh()));
        txtEmail.setText(String.valueOf(clienteEditar.getEmail_cliente()));

        Object dataVencimentoObj = clienteEditar.getCnhdatavencimento();
        if (dataVencimentoObj instanceof Date) {
            Date dataVencimento = (Date) dataVencimentoObj;
            txtDataVencimento.setText(sdf.format(dataVencimento));
        } else {
            // Tratar o caso em que o valor não é uma data
            txtDataVencimento.setText(""); // Ou qualquer outra ação apropriada
        }

    }

    private void carregarComboEstado() {
        EstadoDAO dao = new EstadoDAO();
        List<Estado> listaEstado = dao.select();

        Object[] items = new Object[listaEstado.size()];

        int contador = 0;

        for (Estado estado : listaEstado) {
            items[contador] = estado;

            contador++;
        }

        ComboBoxModel model = new DefaultComboBoxModel(items);

        cboEstado.setModel(model);
        cboEstado.addActionListener((e) -> {
            carregarComboMunicipio();
        });
    }

    private void carregarComboMunicipio() {
        Estado estadoSelecionado = (Estado) cboEstado.getSelectedItem();
        if (estadoSelecionado != null) {
            int idEstado = estadoSelecionado.getId_estado();

            MunicipioDAO dao = new MunicipioDAO();
            List<Municipio> listaMunicipio = dao.selectEstadoMunicipio(idEstado);

            DefaultComboBoxModel<Municipio> model = new DefaultComboBoxModel<>();
            for (Municipio municipio : listaMunicipio) {
                model.addElement(municipio);
            }

            ((JComboBox) cboMunicipio).setModel(model);
        }
    }

    private void limparCampos() {
        txtNome.setText("");
        txtRg.setText("");
        txtCpf.setText("");
        txtLogradouro.setText("");
        txtCNH.setText("");
        txtDataVencimento.setText("");
        txtEmail.setText("");
    }

    private void inicializarMascaras() throws Exception {
        // Formatar data
        MaskFormatter formatterData = new MaskFormatter("##/##/####");
        txtDataVencimento.setFormatterFactory(new DefaultFormatterFactory(formatterData));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jMenuItem1 = new javax.swing.JMenuItem();
        lblMunicipio = new javax.swing.JLabel();
        cboMunicipio = new javax.swing.JComboBox<>();
        lblEstado = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox<>();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        lblValorLogradouro = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblRg = new javax.swing.JLabel();
        txtRg = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        lblCNH = new javax.swing.JLabel();
        txtCNH = new javax.swing.JTextField();
        lblDataNascimento = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtDataVencimento = new javax.swing.JFormattedTextField();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblMunicipio.setText("Município");

        lblEstado.setText("Estado");

        lblCpf.setText("CPF");

        lblValorLogradouro.setText("Logradouro");

        txtLogradouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogradouroActionPerformed(evt);
            }
        });

        lblNome.setText("Nome");

        lblRg.setText("RG");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblCNH.setText("CNH");

        lblDataNascimento.setText("Data Vencimento");

        lblEmail.setText("E-mail");

        txtDataVencimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataVencimentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(btnFechar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNome)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRg)
                                    .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCpf)
                                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEstado)
                                    .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValorLogradouro)
                                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMunicipio)
                                    .addComponent(cboMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCNH)
                                    .addComponent(txtCNH, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDataNascimento))))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCpf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblValorLogradouro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMunicipio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCNH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDataNascimento)
                        .addGap(28, 28, 28)))
                .addGap(18, 18, 18)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (clienteEditar == null) {

            Municipio municipioSelecionado = (Municipio) cboMunicipio.getModel().getSelectedItem();
            Estado estadoSelecionado = (Estado) cboEstado.getModel().getSelectedItem();

            String nome = txtNome.getText();
            String rg = txtRg.getText();
            String cpf = txtCpf.getText();
            String logradouro = txtLogradouro.getText();
            String cnh = txtCNH.getText();

            Date dataNascimento = null;
            try {
                Object objDataNascimento = txtDataVencimento.getValue();
                if (objDataNascimento instanceof String) {
                    String strDataNascimento = (String) objDataNascimento;
                    if (!strDataNascimento.isEmpty()) {
                        dataNascimento = sdf.parse(strDataNascimento);
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(CadastroClienteEditarGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            String email = txtEmail.getText();

            Integer id_municipio = municipioSelecionado.getId_municipio();
            Integer id_estado = estadoSelecionado.getId_estado();

            try {
                dao.insert(nome, rg, cpf, logradouro, id_municipio, id_estado, cnh, dataNascimento, email);
                JOptionPane.showMessageDialog(this, "Cliente Inserido com Sucesso!", "SUCESS", JOptionPane.INFORMATION_MESSAGE);

                parentDialog.carregarLista();

                limparCampos();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {

            Municipio municipioSelecionado = (Municipio) cboMunicipio.getModel().getSelectedItem();
            Estado estadoSelecionado = (Estado) cboEstado.getModel().getSelectedItem();

            String nome = txtNome.getText();
            String rg = txtRg.getText();
            String cpf = txtCpf.getText();
            String logradouro = txtLogradouro.getText();
            String cnh = txtCNH.getText();

            Date dataNascimento = null;
            try {
                Object objDataNascimento = txtDataVencimento.getValue();
                if (objDataNascimento instanceof String) {
                    String strDataNascimento = (String) objDataNascimento;
                    if (!strDataNascimento.isEmpty()) {
                        dataNascimento = sdf.parse(strDataNascimento);
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(CadastroClienteEditarGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            Integer id_municipio = municipioSelecionado.getId_municipio();
            Integer id_estado = estadoSelecionado.getId_estado();

            String email = txtEmail.getText();

            int id = clienteEditar.getId();

            try {
                dao.update(id, nome, rg, cpf, logradouro, id_municipio, id_estado, cnh, dataNascimento, email);
                JOptionPane.showMessageDialog(this, "Seguradora Editada com Sucesso!", "SUCESS", JOptionPane.INFORMATION_MESSAGE);

                parentDialog.carregarLista();

                this.dispose();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtLogradouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogradouroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogradouroActionPerformed

    private void txtDataVencimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataVencimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataVencimentoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JComboBox<String> cboMunicipio;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel lblCNH;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblMunicipio;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRg;
    private javax.swing.JLabel lblValorLogradouro;
    private javax.swing.JTextField txtCNH;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataVencimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRg;
    // End of variables declaration//GEN-END:variables
}
